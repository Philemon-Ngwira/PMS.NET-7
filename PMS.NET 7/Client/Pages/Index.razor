@page "/"

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
<style type="text/css">

    .bounceIn {
        opacity: 0;
        animation-delay: 0.5s;
        animation-duration: 0.5s;
        animation-name: bounceIn;
        animation-fill-mode: forwards;
    }

    .bounceOut {
        animation-duration: 0.5s;
        animation-name: bounceOut;
        animation-fill-mode: forwards;
    }

    .backInDown {
        opacity: 0;
        animation-delay: 0.5s;
        animation-duration: 0.5s;
        animation-name: backInDown;
        animation-fill-mode: forwards;
    }

    .backOutDown {
        animation-duration: 0.5s;
        animation-name: backOutDown;
        animation-fill-mode: forwards;
    }

    .rotateIn {
        opacity: 0;
        animation-delay: 0.5s;
        animation-duration: 0.5s;
        animation-name: rotateIn;
        animation-fill-mode: forwards;
    }

    .rotateOut {
        animation-duration: 0.5s;
        animation-name: rotateOut;
        animation-fill-mode: forwards;
    }
</style>

<MudContainer Class="mt-8 px-8" MaxWidth="MaxWidth.False">
    <MudGrid>
        <MudItem xs="12">
            <MudCarousel Class="mud-width-full" Style="height:300px;" TData="object" AutoCycle="true">
                <MudCarouselItem Color="@Color.Primary" Transition="Transition.Slide">
                    <div class="d-flex" style="height:100%">
                        <MudImage Src="/images/NewLogo.Jpg" Width="1920" ObjectPosition="ObjectPosition.Center" ObjectFit="ObjectFit.Cover"></MudImage>
                    </div>
                </MudCarouselItem>
                <MudCarouselItem Color="@Color.Secondary" Transition="Transition.Fade">
                    <div class="d-flex" style="height:100%">
                        <MudIcon Class="mx-auto my-auto" Icon="@Icons.Custom.Brands.MudBlazor" Size="@Size.Large" />
                    </div>
                </MudCarouselItem>
                <MudCarouselItem Color="@Color.Tertiary" Transition="Transition.Custom" CustomTransitionEnter="bounceIn" CustomTransitionExit="bounceOut">
                    <div class="d-flex" style="height:100%">
                        <MudIcon Class="mx-auto my-auto" Icon="@Icons.Custom.Brands.MudBlazor" Size="@Size.Large" />
                    </div>
                </MudCarouselItem>
                <MudCarouselItem Transition="Transition.Custom" CustomTransitionEnter="backInDown" CustomTransitionExit="backOutDown">
                    <div class="d-flex" style="background-color:lightgray; height:100%">
                        <MudIcon Class="mx-auto my-auto" Icon="@Icons.Custom.Brands.MudBlazor" Color="@Color.Primary" Size="@Size.Large" />
                    </div>
                </MudCarouselItem>
                <MudCarouselItem Transition="Transition.Custom" CustomTransitionEnter="rotateIn" CustomTransitionExit="rotateOut">
                    <div class="d-flex" style="background-color:lightgray; height:100%">
                        <MudIcon Class="mx-auto my-auto" Icon="@Icons.Custom.Brands.MudBlazor" Color="@Color.Secondary" Size="@Size.Large" />
                    </div>
                </MudCarouselItem>
            </MudCarousel>
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;">
                <div>
                    <MudText Typo="Typo.h5"><i><b>T</b>otal <b>C</b>urrent <b>P</b>rojects</i></MudText>
                    <MudText Typo="Typo.h6"><b>2</b></MudText>
                </div>

            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;">
                <MudText Typo="Typo.h5"><i><b>T</b>otal <b>C</b>ompleted <b>P</b>rojects</i></MudText>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="12" md="4">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;">
                <MudText Typo="Typo.h5"><i><b>T</b>otal <b>C</b>anceled <b>P</b>rojects</i></MudText>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudGrid>
                <MudItem xs="12">
                    <MudPaper Elevation="2" Class="pa-4" Style="height: 450px;">
                        <div>
                            <MudChart ChartType="ChartType.Line" ChartSeries="@Series" XAxisLabels="@XAxisLabels" Width="100%" Height="350" ChartOptions="options"></MudChart>
                            <MudButton @onclick="RandomizeData">Randomize Data</MudButton>
                            <MudMenu Label="Interpolation Algorithm" FullWidth="true">
                                <MudMenuItem OnClick="() => OnClickMenu(InterpolationOption.NaturalSpline)">Natural Spline</MudMenuItem>
                                <MudMenuItem OnClick="() => OnClickMenu(InterpolationOption.EndSlope)">End Slope</MudMenuItem>
                                <MudMenuItem OnClick="() => OnClickMenu(InterpolationOption.Periodic)">Periodic</MudMenuItem>
                            </MudMenu>
                        </div>
                    </MudPaper>
                </MudItem>
                <MudItem xs="12">
                    <MudPaper Elevation="2" Class="pa-4" Style="height: 450px;"></MudPaper>
                </MudItem>
            </MudGrid>
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudPaper Elevation="2" Class="pa-4" Style="height:100%">
                <MudChart ChartType="ChartType.Pie" InputData="@data" @bind-SelectedIndex="PieIndex" InputLabels="@labels" Width="300px" Height="300px" />
                <MudChart ChartType="ChartType.Pie" InputData="@data" @bind-SelectedIndex="PieIndex" InputLabels="@labels" Width="300px" Height="300px" />
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;"></MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;"></MudPaper>
        </MudItem>
        <MudItem xs="12" sm="12" md="4">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;"></MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {


    #region LineChart
    private ChartOptions options = new ChartOptions();
    public List<ChartSeries> Series = new List<ChartSeries>()
    {
        new ChartSeries() { Name = "Series 1", Data = new double[] { 90, 79, 72, 69, 62, 62, 55, 65, 70 } },
        new ChartSeries() { Name = "Series 2", Data = new double[] { 35, 41, 35, 51, 49, 62, 69, 91, 148 } },
    };
    public string[] XAxisLabels = { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep" };

    Random random = new Random();
    protected override void OnInitialized()
    {
        options.InterpolationOption = InterpolationOption.NaturalSpline;
        options.YAxisFormat = "c2";
    }

    public void RandomizeData()
    {
        var new_series = new List<ChartSeries>()
        {
            new ChartSeries() { Name = "Series 1", Data = new double[9] },
            new ChartSeries() { Name = "Series 2", Data = new double[9] },
        };
        for (int i = 0; i < 9; i++)
        {
            new_series[0].Data[i] = random.NextDouble() * 100;
            new_series[1].Data[i] = random.NextDouble() * 100;
        }
        Series = new_series;
        StateHasChanged();
    }

    void OnClickMenu(InterpolationOption interpolationOption)
    {
        options.InterpolationOption = interpolationOption;
        StateHasChanged();
    }
    #endregion

    #region PieChart
    private int PieIndex = -1; //default value cannot be 0 -> first selectedindex is 0.
    int dataSize = 4;
    double[] data = { 77, 25, 20, 5 };
    string[] labels = { "Uranium", "Plutonium", "Thorium", "Caesium", "Technetium", "Promethium",
                        "Polonium", "Astatine", "Radon", "Francium", "Radium", "Actinium", "Protactinium",
                        "Neptunium", "Americium", "Curium", "Berkelium", "Californium", "Einsteinium", "Mudblaznium" };

    Random Pierandom = new Random();

    void RandomizePieData()
    {
        var new_data = new double[dataSize];
        for (int i = 0; i < new_data.Length; i++)
            new_data[i] = Pierandom.NextDouble() * 100;
        data = new_data;
        StateHasChanged();
    }

    void AddDataSize()
    {
        if (dataSize < 20)
        {
            dataSize = dataSize + 1;
            RandomizeData();
        }
    }
    void RemoveDataSize()
    {
        if (dataSize > 0)
        {
            dataSize = dataSize - 1;
            RandomizeData();
        }
    }
    #endregion
}